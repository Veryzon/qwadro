Booting up the Qwadro Execution Ecosystem...
afxManifest.c:324
1: Section 'BasedOn="//./e/qwadro/afx/"' missing ']' operator.Acquiring thread...  7740 "afxSystem_w32.c:573"Mounting... <.>('E:/qwadro/afx///'),5Mounting... <system>('E:/qwadro/afx//system/'),5Mounting... <system>('E:/qwadro/afx//system32/'),7Mounting... <system>('E:/qwadro/afx//system32d/'),7Mounting... <//./c/>('C:\'),7Mounting... <//./e/>('E:\'),7Mounting... <//./f/>('F:\'),7Mounting... <//./g/>('G:\'),7Mounting... <//./h/>('H:\'),7Mounting... <//./i/>('I:\'),7Loading module... <e2coree>Memory page size: 4096Logical processor count: 2Doing the AVX start up...Loading module... <e2draw>Loading module... <targl4.dll>Installable client driver discovered.
	Device: TARGA Advanced Raster Graphics Adapter
	Driver: TARGA over OpenGL 4
	Version: 4.0.16385
	Provider: SIGMA Technology Group <https://sigmaco.org>
Doing the AUX start up...Loading module... <e2ux>Acquiring HID at port 0Mounting... <code>('E:/qwadro/afx//system/'),7Entering the Thread Execution Environment 7740
Loading module... <opengl32.dll>Listing mem available display devices...
#0 = Intel(R) HD Graphics (\\.\DISPLAY1) 8080005#1 = RDPDD Chained DD (\\.\DISPLAYV1) 200008#2 = RDP Encoder Mirror Driver (\\.\DISPLAYV2) 200008#3 = RDP Reflector Display Driver (\\.\DISPLAYV3) 200008Acquiring thread...  0 "sglDdev_w32.c:1032"Entering the Thread Execution Environment 2132
Starting Thread Execution Unit 2132Creating transient OpenGL context000 wglMakeContextCurrentARB core found.000 wglGetCurrentReadDCARB core found.000 wglCreateContextAttribsARB core found.000 wglChoosePixelFormatARB core found.000 wglSwapIntervalEXT core found.000 wglGetExtensionsStringARB core found.Creating definitive OpenGL context000 wglMakeContextCurrentARB core found.000 wglGetCurrentReadDCARB core found.000 wglCreateContextAttribsARB core found.000 wglChoosePixelFormatARB core found.000 wglSwapIntervalEXT core found.000 wglGetExtensionsStringARB core found.391 glReleaseShaderCompiler core found.392 glShaderBinary core found.393 glGetShaderPrecisionFormat core found.394 glDepthRangef core found.395 glClearDepthf core found.396 glGetProgramBinary core found.397 glProgramBinary core found.398 glProgramParameteri core found.399 glUseProgramStages core found.400 glActiveShaderProgram core found.401 glCreateShaderProgramv core found.402 glBindProgramPipeline core found.403 glDeleteProgramPipelines core found.404 glGenProgramPipelines core found.405 glIsProgramPipeline core found.406 glGetProgramPipelineiv core found.407 glProgramUniform1i core found.408 glProgramUniform1iv core found.409 glProgramUniform1f core found.410 glProgramUniform1fv core found.411 glProgramUniform1d core found.412 glProgramUniform1dv core found.413 glProgramUniform1ui core found.414 glProgramUniform1uiv core found.415 glProgramUniform2i core found.416 glProgramUniform2iv core found.417 glProgramUniform2f core found.418 glProgramUniform2fv core found.419 glProgramUniform2d core found.420 glProgramUniform2dv core found.421 glProgramUniform2ui core found.422 glProgramUniform2uiv core found.423 glProgramUniform3i core found.424 glProgramUniform3iv core found.425 glProgramUniform3f core found.426 glProgramUniform3fv core found.427 glProgramUniform3d core found.428 glProgramUniform3dv core found.429 glProgramUniform3ui core found.430 glProgramUniform3uiv core found.431 glProgramUniform4i core found.432 glProgramUniform4iv core found.433 glProgramUniform4f core found.434 glProgramUniform4fv core found.435 glProgramUniform4d core found.436 glProgramUniform4dv core found.437 glProgramUniform4ui core found.438 glProgramUniform4uiv core found.439 glProgramUniformMatrix2fv core found.440 glProgramUniformMatrix3fv core found.441 glProgramUniformMatrix4fv core found.442 glProgramUniformMatrix2dv core found.443 glProgramUniformMatrix3dv core found.444 glProgramUniformMatrix4dv core found.445 glProgramUniformMatrix2x3fv core found.446 glProgramUniformMatrix3x2fv core found.447 glProgramUniformMatrix2x4fv core found.448 glProgramUniformMatrix4x2fv core found.449 glProgramUniformMatrix3x4fv core found.450 glProgramUniformMatrix4x3fv core found.451 glProgramUniformMatrix2x3dv core found.452 glProgramUniformMatrix3x2dv core found.453 glProgramUniformMatrix2x4dv core found.454 glProgramUniformMatrix4x2dv core found.455 glProgramUniformMatrix3x4dv core found.456 glProgramUniformMatrix4x3dv core found.457 glValidateProgramPipeline core found.458 glGetProgramPipelineInfoLog core found.459 glVertexAttribL1d core found.460 glVertexAttribL2d core found.461 glVertexAttribL3d core found.462 glVertexAttribL4d core found.463 glVertexAttribL1dv core found.464 glVertexAttribL2dv core found.465 glVertexAttribL3dv core found.466 glVertexAttribL4dv core found.467 glVertexAttribLPointer core found.468 glGetVertexAttribLdv core found.469 glViewportArrayv core found.470 glViewportIndexedf core found.471 glViewportIndexedfv core found.472 glScissorArrayv core found.473 glScissorIndexed core found.474 glScissorIndexedv core found.475 glDepthRangeArrayv core found.476 glDepthRangeIndexed core found.477 glGetFloati_v core found.478 glGetDoublei_v core found.479 glDrawArraysInstancedBaseInstance core found.480 glDrawElementsInstancedBaseInstance core found.481 glDrawElementsInstancedBaseVertexBaseInstance core found.482 glGetInternalformativ core found.483 glGetActiveAtomicCounterBufferiv core found.484 glBindImageTexture core found.485 glMemoryBarrier core found.486 glTexStorage1D core found.487 glTexStorage2D core found.488 glTexStorage3D core found.489 glDrawTransformFeedbackInstanced core found.490 glDrawTransformFeedbackStreamInstanced core found.493 glDispatchCompute core found.494 glDispatchComputeIndirect core found.496 glFramebufferParameteri core found.497 glGetFramebufferParameteriv core found.498 glGetInternalformati64v core found.503 glInvalidateFramebuffer core found.504 glInvalidateSubFramebuffer core found.505 glMultiDrawArraysIndirect core found.506 glMultiDrawElementsIndirect core found.507 glGetProgramInterfaceiv core found.508 glGetProgramResourceIndex core found.509 glGetProgramResourceName core found.510 glGetProgramResourceiv core found.511 glGetProgramResourceLocation core found.512 glGetProgramResourceLocationIndex core found.513 glShaderStorageBlockBinding core found.514 glTexBufferRange core found.515 glTexStorage2DMultisample core found.516 glTexStorage3DMultisample core found.518 glBindVertexBuffer core found.519 glVertexAttribFormat core found.520 glVertexAttribIFormat core found.521 glVertexAttribLFormat core found.522 glVertexAttribBinding core found.523 glVertexBindingDivisor core found.524 glDebugMessageControl core found.525 glDebugMessageInsert core found.526 glDebugMessageCallback core found.527 glGetDebugMessageLog core found.528 glPushDebugGroup core found.529 glPopDebugGroup core found.530 glObjectLabel core found.531 glGetObjectLabel core found.532 glObjectPtrLabel core found.533 glGetObjectPtrLabel core found.534 glBufferStorage core found.543 glClipControlEXT ext found.551 glNamedBufferStorageEXT ext found.589 glTextureBufferRangeEXT ext found.606 glTextureParameteriEXT ext found.641 glMemoryBarrierByRegion core found.644 glGetGraphicsResetStatusARB ext found.645 glGetnCompressedTexImageARB ext found.646 glGetnTexImageARB ext found.647 glGetnUniformdvARB ext found.648 glGetnUniformfvARB ext found.649 glGetnUniformivARB ext found.650 glGetnUniformuivARB ext found.651 glReadnPixelsARB ext found.677 381 1920 1080 96 96 32 1 36 36 51 60 1 SIGMA GL/2 Hardware-accelerated Draw Processing Unit 000
	Intel(R) HD Graphics 4.0.0 - Build 10.18.10.5161sglDdev_w32.c:299
API ERROR HIGH 1280 GL error GL_INVALID_ENUMsglDdev_w32.c:751
GL: INVAL_PARAMsglDdev_w32.c:299
API ERROR HIGH 1280 GL error GL_INVALID_ENUMsglDdev_w32.c:777
GL: INVAL_PARAMsglDdev_w32.c:299
API ERROR HIGH 1280 GL error GL_INVALID_ENUMsglDdev_w32.c:787
GL: INVAL_PARAMsglDdev_w32.c:299
API ERROR HIGH 1280 GL error GL_INVALID_ENUMsglDdev_w32.c:789
GL: INVAL_PARAMsglDdev_w32.c:299
API ERROR HIGH 1280 GL error GL_INVALID_ENUMsglDdev_w32.c:793
GL: INVAL_PARAMEntering the Thread Execution Environment 7740
Uploading pipeline 'system/video/sampleOutRgba.xsh.xml'Loading file... <system/video/sampleOutRgba.xsh.xml>('E:/qwadro/afx//system//video/sampleOutRgba.xsh.xml')Node 'DepthWriteEnabled' not handled.../system/video/sampleOutRgba.xsh.xmlUploading pipeline '../system/video/sampleOutRgba.xsh.xml'afxStorage.c:203
afxStorage.c:223
Loading file... <../system/video/sampleOutRgba.xsh.xml>('../system/video/sampleOutRgba.xsh.xml')../system/video/uvOutTristripQuad.vsh../system/video/sampleOutRgba2d.fshafxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/uvOutTristripQuad.vsh>('../system/video/uvOutTristripQuad.vsh'),1afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/stdEnv.inc>('../system/video/stdEnv.inc'),1#version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

#define float2 vec2
#define float3 vec3
#define float4 vec4

#define IN(_location_, _type_, _name_) layout(location = _location_) in _type_ _name_ 
#define OUT(_location_, _type_, _name_) layout(location = _location_) out _type_ _name_ 
//#define UNIFORM(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
//#define MULTIFORM(_set_, _binding_, _type_, _name_, _count_) _type_ _name_[_count_] 

// ubo = std140, ssbo = std430
#define UNIFORM_UNIT(_set_, _binding_, _name_) layout(std140) uniform _name_ 
#define STORAGE_UNIT(_set_, _binding_, _access_, _name_) layout(std430) _access_ buffer _name_ 
#define SAMPLING_UNIT(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
#define PUSHABLE(_name_) layout(std140) uniform _name_

const vec4 gsQuadPos[4] = vec4[](vec4(-1, 1, 0, 1), vec4(-1,-1, 0, 1), vec4(1, 1, 0, 1), vec4(1,-1, 0, 1));
const vec2 gsQuadUv[4] = vec2[](vec2(0, 1), vec2(0, 0), vec2(1, 1), vec2(1, 0));

out block
{
    vec2 uv0;
} sgl_v;

void main()
{
    // draw a full coverage quad based on two tristripped triangles (4 indices). AfxDraw(0, 1, 0, 4)
    
    gl_Position = gsQuadPos[gl_VertexID];
    sgl_v.uv0 = gsQuadUv[gl_VertexID];
}
afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/sampleOutRgba2d.fsh>('../system/video/sampleOutRgba2d.fsh'),1afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/stdEnv.inc>('../system/video/stdEnv.inc'),1#version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

#define float2 vec2
#define float3 vec3
#define float4 vec4

#define IN(_location_, _type_, _name_) layout(location = _location_) in _type_ _name_ 
#define OUT(_location_, _type_, _name_) layout(location = _location_) out _type_ _name_ 
//#define UNIFORM(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
//#define MULTIFORM(_set_, _binding_, _type_, _name_, _count_) _type_ _name_[_count_] 

// ubo = std140, ssbo = std430
#define UNIFORM_UNIT(_set_, _binding_, _name_) layout(std140) uniform _name_ 
#define STORAGE_UNIT(_set_, _binding_, _access_, _name_) layout(std430) _access_ buffer _name_ 
#define SAMPLING_UNIT(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
#define PUSHABLE(_name_) layout(std140) uniform _name_

SAMPLING_UNIT(0, 0, sampler2D, samp);

in block
{
    vec2 uv0;
} sgl_v;

OUT(0, vec4, sgl_rgba);

void main()
{
    sgl_rgba = texture(samp, sgl_v.uv0);
}
afxStorage.c:203
afxStorage.c:223
Reloading file 0... <../art/world.tga>('../art/world.tga')Entering the Thread Execution Environment 2132
Hardware-side raster 04623580 ready. de1, 8058, [512,512,1]Entering the Thread Execution Environment 7740
afxStorage.c:203
afxStorage.c:223
Opening file... <../tmp/world2.tga>('../tmp/world2.tga'),2Uploading pipeline '../system/video/rgbOutYuv.xsh.xml?yFlipped'afxStorage.c:203
afxStorage.c:223
Loading file... <../system/video/rgbOutYuv.xsh.xml>('../system/video/rgbOutYuv.xsh.xml')Node 'DepthWriteEnabled' not handled.../system/video/rgbOutYuv.xsh.xml?yFlippedUploading pipeline '../system/video/rgbOutYuv.xsh.xml?yFlipped'afxStorage.c:203
afxStorage.c:223
Loading file... <../system/video/rgbOutYuv.xsh.xml>('../system/video/rgbOutYuv.xsh.xml')../system/video/uvOutTristripQuadInvY.vsh../system/video/rgbOutYuvSigma.fshafxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/uvOutTristripQuadInvY.vsh>('../system/video/uvOutTristripQuadInvY.vsh'),1afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/stdEnv.inc>('../system/video/stdEnv.inc'),1#version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

#define float2 vec2
#define float3 vec3
#define float4 vec4

#define IN(_location_, _type_, _name_) layout(location = _location_) in _type_ _name_ 
#define OUT(_location_, _type_, _name_) layout(location = _location_) out _type_ _name_ 
//#define UNIFORM(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
//#define MULTIFORM(_set_, _binding_, _type_, _name_, _count_) _type_ _name_[_count_] 

// ubo = std140, ssbo = std430
#define UNIFORM_UNIT(_set_, _binding_, _name_) layout(std140) uniform _name_ 
#define STORAGE_UNIT(_set_, _binding_, _access_, _name_) layout(std430) _access_ buffer _name_ 
#define SAMPLING_UNIT(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
#define PUSHABLE(_name_) layout(std140) uniform _name_

const vec4 gsQuadPos[4] = vec4[](vec4(-1, 1, 0, 1), vec4(-1,-1, 0, 1), vec4(1, 1, 0, 1), vec4(1,-1, 0, 1));
const vec2 gsQuadUvFlippedY[4] = vec2[](vec2(0, 0), vec2(0, 1), vec2(1, 0), vec2(1, 1));
// flipped V only

out block
{
    vec2 uv0;
} sgl_v;

void main()
{
    // draw a full coverage quad based on two tristripped triangles (4 indices). AfxDraw(0, 1, 0, 4)
    gl_Position = gsQuadPos[gl_VertexID];
    sgl_v.uv0 = gsQuadUvFlippedY[gl_VertexID];
}
afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/rgbOutYuvSigma.fsh>('../system/video/rgbOutYuvSigma.fsh'),1afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/stdEnv.inc>('../system/video/stdEnv.inc'),1#version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

#define float2 vec2
#define float3 vec3
#define float4 vec4

#define IN(_location_, _type_, _name_) layout(location = _location_) in _type_ _name_ 
#define OUT(_location_, _type_, _name_) layout(location = _location_) out _type_ _name_ 
//#define UNIFORM(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
//#define MULTIFORM(_set_, _binding_, _type_, _name_, _count_) _type_ _name_[_count_] 

// ubo = std140, ssbo = std430
#define UNIFORM_UNIT(_set_, _binding_, _name_) layout(std140) uniform _name_ 
#define STORAGE_UNIT(_set_, _binding_, _access_, _name_) layout(std430) _access_ buffer _name_ 
#define SAMPLING_UNIT(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
#define PUSHABLE(_name_) layout(std140) uniform _name_

SAMPLING_UNIT(0, 0, sampler2D, samp0);
SAMPLING_UNIT(0, 1, sampler2D, samp1);
SAMPLING_UNIT(0, 2, sampler2D, samp2);

in block
{
    vec2 uv0;
} sgl_v;

OUT(0, vec4, sgl_rgba);

void main()
{
    vec3 yuv;
    yuv.x = texture(samp0, sgl_v.uv0).r;
    yuv.y = texture(samp2, sgl_v.uv0).r - 0.5;
    yuv.z = texture(samp1, sgl_v.uv0).r - 0.5;
    
    vec3 rgb = mat3( 1, 1, 1, 0, -0.34414, 1.772, 1.402, -0.71414, 0) * yuv;
    sgl_rgba = vec4(rgb, 1);
}
afxStorage.c:203
afxStorage.c:223
Loading module... <../system32/binkw32.dl_>afxDrawOutput 000 readapted. 1920x1080 @ 60.000000Hz <1.777778r, 1.776903p>afxDrawOutput 000 adjusted. <1272, 1920, 0.663> 1.854227 <686, 1080, 0.635>afxDrawOutput 000 adjusted. <1280, 1920, 0.667> 1.777778 <720, 1080, 0.667>Entering the Thread Execution Environment 2132
Hardware-side buffer 02b38670 ready. 35052, 1, 1Hardware-side buffer 02b38720 ready. 35052, 2, 1Hardware-side raster 045bcb28 ready. de1, 8229, [1280,720,1]Hardware-side raster 045bcbd8 ready. de1, 8229, [640,360,1]Hardware-side raster 045bcc88 ready. de1, 8229, [640,360,1]Hardware-side raster 045cc6b8 ready. de1, 8058, [1280,720,1]avxCanvas 045cc5d0 hardware-side data instanced.afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/uvOutTristripQuadInvY.vsh>('../system/video/uvOutTristripQuadInvY.vsh'),1afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/stdEnv.inc>('../system/video/stdEnv.inc'),1#version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

#define float2 vec2
#define float3 vec3
#define float4 vec4

#define IN(_location_, _type_, _name_) layout(location = _location_) in _type_ _name_ 
#define OUT(_location_, _type_, _name_) layout(location = _location_) out _type_ _name_ 
//#define UNIFORM(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
//#define MULTIFORM(_set_, _binding_, _type_, _name_, _count_) _type_ _name_[_count_] 

// ubo = std140, ssbo = std430
#define UNIFORM_UNIT(_set_, _binding_, _name_) layout(std140) uniform _name_ 
#define STORAGE_UNIT(_set_, _binding_, _access_, _name_) layout(std430) _access_ buffer _name_ 
#define SAMPLING_UNIT(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
#define PUSHABLE(_name_) layout(std140) uniform _name_

const vec4 gsQuadPos[4] = vec4[](vec4(-1, 1, 0, 1), vec4(-1,-1, 0, 1), vec4(1, 1, 0, 1), vec4(1,-1, 0, 1));
const vec2 gsQuadUvFlippedY[4] = vec2[](vec2(0, 0), vec2(0, 1), vec2(1, 0), vec2(1, 1));
// flipped V only

out block
{
    vec2 uv0;
} sgl_v;

void main()
{
    // draw a full coverage quad based on two tristripped triangles (4 indices). AfxDraw(0, 1, 0, 4)
    gl_Position = gsQuadPos[gl_VertexID];
    sgl_v.uv0 = gsQuadUvFlippedY[gl_VertexID];
}
afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/rgbOutYuvSigma.fsh>('../system/video/rgbOutYuvSigma.fsh'),1afxStorage.c:203
afxStorage.c:223
Opening file... <../system/video/stdEnv.inc>('../system/video/stdEnv.inc'),1#version 330 core // QWADRO. Engineered by SIGMA Technology Group.

#define afxInt int
#define afxNat uint

#define afxReal float

#define afxV2d vec2
#define afxV3d vec3
#define afxV4d vec4

#define afxM2d mat2
#define afxM3d mat3
#define afxM4d mat4

#define float2 vec2
#define float3 vec3
#define float4 vec4

#define IN(_location_, _type_, _name_) layout(location = _location_) in _type_ _name_ 
#define OUT(_location_, _type_, _name_) layout(location = _location_) out _type_ _name_ 
//#define UNIFORM(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
//#define MULTIFORM(_set_, _binding_, _type_, _name_, _count_) _type_ _name_[_count_] 

// ubo = std140, ssbo = std430
#define UNIFORM_UNIT(_set_, _binding_, _name_) layout(std140) uniform _name_ 
#define STORAGE_UNIT(_set_, _binding_, _access_, _name_) layout(std430) _access_ buffer _name_ 
#define SAMPLING_UNIT(_set_, _binding_, _type_, _name_) uniform _type_ _name_ 
#define PUSHABLE(_name_) layout(std140) uniform _name_

SAMPLING_UNIT(0, 0, sampler2D, samp0);
SAMPLING_UNIT(0, 1, sampler2D, samp1);
SAMPLING_UNIT(0, 2, sampler2D, samp2);

in block
{
    vec2 uv0;
} sgl_v;

OUT(0, vec4, sgl_rgba);

void main()
{
    vec3 yuv;
    yuv.x = texture(samp0, sgl_v.uv0).r;
    yuv.y = texture(samp2, sgl_v.uv0).r - 0.5;
    yuv.z = texture(samp1, sgl_v.uv0).r - 0.5;
    
    vec3 rgb = mat3( 1, 1, 1, 0, -0.34414, 1.772, 1.402, -0.71414, 0) * yuv;
    sgl_rgba = vec4(rgb, 1);
}
avxPipeline 04602880 hardware-side data instanced.Hardware-side sampler 02b9c420 ready.sglDdev_w32.c:122
Hardware-side raster 045bc8e0 ready. de1, 8229, [1280,720,1]Hardware-side raster 045bc990 ready. de1, 8229, [640,360,1]Hardware-side raster 045bca40 ready. de1, 8229, [640,360,1]Entering the Thread Execution Environment 7740
afxDrawOutput 000 adjusted. <1281, 1920, 0.667> 1.779167 <720, 1080, 0.667>afxDrawOutput 000 adjusted. <1282, 1920, 0.668> 1.780556 <720, 1080, 0.667>afxDrawOutput 000 adjusted. <1284, 1920, 0.669> 1.783333 <720, 1080, 0.667>afxDrawOutput 000 adjusted. <1285, 1920, 0.669> 1.782247 <721, 1080, 0.668>afxDrawOutput 000 adjusted. <1287, 1920, 0.670> 1.782548 <722, 1080, 0.669>afxDrawOutput 000 adjusted. <1289, 1920, 0.671> 1.780387 <724, 1080, 0.670>afxDrawOutput 000 adjusted. <1291, 1920, 0.672> 1.775791 <727, 1080, 0.673>afxDrawOutput 000 adjusted. <1295, 1920, 0.674> 1.776406 <729, 1080, 0.675>afxDrawOutput 000 adjusted. <1299, 1920, 0.677> 1.772169 <733, 1080, 0.679>afxDrawOutput 000 adjusted. <1302, 1920, 0.678> 1.766621 <737, 1080, 0.682>afxDrawOutput 000 adjusted. <1305, 1920, 0.680> 1.758760 <742, 1080, 0.687>afxDrawOutput 000 adjusted. <1309, 1920, 0.682> 1.752343 <747, 1080, 0.692>afxDrawOutput 000 adjusted. <1313, 1920, 0.684> 1.746011 <752, 1080, 0.696>afxDrawOutput 000 adjusted. <1317, 1920, 0.686> 1.742063 <756, 1080, 0.700>afxDrawOutput 000 adjusted. <1321, 1920, 0.688> 1.735874 <761, 1080, 0.705>afxDrawOutput 000 adjusted. <1326, 1920, 0.691> 1.731070 <766, 1080, 0.709>afxDrawOutput 000 adjusted. <1331, 1920, 0.693> 1.726329 <771, 1080, 0.714>afxDrawOutput 000 adjusted. <1336, 1920, 0.696> 1.721649 <776, 1080, 0.719>afxDrawOutput 000 adjusted. <1340, 1920, 0.698> 1.711367 <783, 1080, 0.725>afxDrawOutput 000 adjusted. <1345, 1920, 0.701> 1.704689 <789, 1080, 0.731>afxDrawOutput 000 adjusted. <1352, 1920, 0.704> 1.700629 <795, 1080, 0.736>afxDrawOutput 000 adjusted. <1357, 1920, 0.707> 1.696250 <800, 1080, 0.741>afxDrawOutput 000 adjusted. <1363, 1920, 0.710> 1.691067 <806, 1080, 0.746>afxDrawOutput 000 adjusted. <1369, 1920, 0.713> 1.685961 <812, 1080, 0.752>afxDrawOutput 000 adjusted. <1377, 1920, 0.717> 1.685435 <817, 1080, 0.756>afxDrawOutput 000 adjusted. <1383, 1920, 0.720> 1.678398 <824, 1080, 0.763>afxDrawOutput 000 adjusted. <1391, 1920, 0.724> 1.677925 <829, 1080, 0.768>afxDrawOutput 000 adjusted. <1398, 1920, 0.728> 1.672249 <836, 1080, 0.774>afxDrawOutput 000 adjusted. <1407, 1920, 0.733> 1.669039 <843, 1080, 0.781>afxDrawOutput 000 adjusted. <1415, 1920, 0.737> 1.664706 <850, 1080, 0.787>afxDrawOutput 000 adjusted. <1423, 1920, 0.741> 1.658508 <858, 1080, 0.794>afxDrawOutput 000 adjusted. <1430, 1920, 0.745> 1.655093 <864, 1080, 0.800>afxDrawOutput 000 adjusted. <1438, 1920, 0.749> 1.650976 <871, 1080, 0.806>afxDrawOutput 000 adjusted. <1444, 1920, 0.752> 1.646522 <877, 1080, 0.812>afxDrawOutput 000 adjusted. <1452, 1920, 0.756> 1.646259 <882, 1080, 0.817>afxDrawOutput 000 adjusted. <1458, 1920, 0.759> 1.641892 <888, 1080, 0.822>afxDrawOutput 000 adjusted. <1465, 1920, 0.763> 1.636872 <895, 1080, 0.829>afxDrawOutput 000 adjusted. <1470, 1920, 0.766> 1.631521 <901, 1080, 0.834>afxDrawOutput 000 adjusted. <1475, 1920, 0.768> 1.624449 <908, 1080, 0.841>afxDrawOutput 000 adjusted. <1479, 1920, 0.770> 1.619934 <913, 1080, 0.845>afxDrawOutput 000 adjusted. <1483, 1920, 0.772> 1.615468 <918, 1080, 0.850>afxDrawOutput 000 adjusted. <1485, 1920, 0.773> 1.614130 <920, 1080, 0.852>afxDrawOutput 000 adjusted. <1487, 1920, 0.774> 1.611051 <923, 1080, 0.855>afxDrawOutput 000 adjusted. <1489, 1920, 0.776> 1.609730 <925, 1080, 0.856>Entering the Thread Execution Environment 2132
Hardware-side raster 04717bb8 ready. de1, 8058, [1489,925,1]avxCanvas 07927be8 hardware-side data instanced.